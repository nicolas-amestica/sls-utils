service: sls-svl-utils

plugins:
  - serverless-plugin-include-dependencies
  - serverless-api-gateway-caching
  - serverless-s3-local
  - serverless-dynamodb-local
  - serverless-offline

custom:
  apiGatewayCaching:                        # DESABILITA EL CACHÉ DE FORMA GLOBAL AL CONSULTAR EL ENDPOINT (DE TODAS FORMAS ES NECESARIO INDICARLOS EN CADA ENDPOINT)
    enabled: false
  s3:                                       # SERVERLESS-S3-LOCAL CONFIGURACION
    host: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.ENDPOINT}
    port: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.PORT}
    directory: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.DIRECTORY}
    # cors: true
    # noStart: true
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true
    migration: offline/migrations
  v_login: "v1"
  v_create_user: "v1"
  v_get_user: "v1"
  v_list_users: "v1"
  v_delete_user: "v1"

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs12.x
  apiGateway: 
    shouldStartNameWithService: true
  lambdaHashingVersion: 20201221
  profile: super-usuario
  stage: prod
  region: us-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
        - s3:*
      Resource: '*'

  # VARIABLES DE ENTORNO.
  environment:

    PROJECT_NAME: ${file(./config/config.${self:provider.stage}.json):PROJECT_NAME}

    SEED_TOKEN: ${file(./config/config.${self:provider.stage}.json):AUTHORIZATION.TOKEN.SEED_TOKEN}
    EXPIRE_TOKEN: ${file(./config/config.${self:provider.stage}.json):AUTHORIZATION.TOKEN.SEED_EXPIRE}

    BUSINESS: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUSINESS}
    COUNTRIES: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.COUNTRIES}

    TMP_FOLDER: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.TEMPORARY_FOLDER}

    TABLE_USUARIO_DYNAMODB: ${file(./config/config.${self:provider.stage}.json):DATA_BASE_CREATION.AWS.DYNAMODB.TABLES.USUARIO}

    DB_HOST_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.HOST_DB}
    DB_NAME_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.NAME_DB}
    DB_USUARIO_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.USUARIO_DB}
    DB_PASS_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.PASS_DB}
    DB_ENCRYPT_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.ENCRYPT}
    DB_ENABLEARITHABORT_FINANCES: ${file(./config/config.${self:provider.stage}.json):DATA_BASES_CONNECTION.FINANCES.ENABLEARITHABORT}

    GMAIL_CONFIG_1_HOST: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.HOST}
    GMAIL_CONFIG_1_PORT: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.PORT}
    GMAIL_CONFIG_1_REQUIRETLS: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.REQUIRETLS}
    GMAIL_CONFIG_1_USER: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.AUTH.USER}
    GMAIL_CONFIG_1_PASS: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.AUTH.PASS}
    GMAIL_CONFIG_1_LOGGER: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.LOGGER}
    GMAIL_CONFIG_1_DEBUG: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.DEBUG}
    GMAIL_CONFIG_1_RECEIVER: ${file(./config/config.${self:provider.stage}.json):EMAIL.GMAIL.CONFIG_1.RECEIVER}

    S3_CONFIG_S3FORCEPATHSTYLE: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.S3FORCEPATHSTYLE}
    S3_CONFIG_ACCESSKEYID: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.ACCESSKEYID}
    S3_CONFIG_SECRETACCESSKEY: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.SECRETACCESSKEY}
    S3_CONFIG_ENDPOINT: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.ENDPOINT}
    S3_CONFIG_PORT: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.PORT}
    S3_CONFIG_PROTOCOL: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.PROTOCOL}
    S3_CONFIG_DIRECTORY: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.BUCKET_S3_CONFIG.DIRECTORY}
    
    BUCKET_M_LIQUIDACION_FINAL_REPORTS: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.MODULES.LIQUIDACION.PROCESO.FINAL_REPORTS.BUCKET_NAME}

    N_LIQUIDACION_FINAL_REPORTS_PENDIENTES_LIQUIDAR_FILE: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.MODULES.LIQUIDACION.PROCESO.FINAL_REPORTS.FILE_NAMES.PENDIENTESLIQUIDAR}
    N_LIQUIDACION_FINAL_REPORTS_SALES_FILE: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.MODULES.LIQUIDACION.PROCESO.FINAL_REPORTS.FILE_NAMES.SALES}
    N_LIQUIDACION_FINAL_REPORTS_SELLERS_FILE: ${file(./config/config.${self:provider.stage}.json):PROJECT_CONFIG.MODULES.LIQUIDACION.PROCESO.FINAL_REPORTS.FILE_NAMES.SELLERS}

  apiKeys:
    - ${file(./config/config.${self:provider.stage}.json):AUTHORIZATION.X-API-KEY}

functions:

  authorizerToken:
    handler: lambdas/authorizer/handler.generico

  login:
    description: Autenticación de usuario.
    handler: lambdas/login/handler.generico
    events:
      - http:
          path: /api/${self:custom.v_login}/utils/auth/login
          method: POST
          private: true

  createUser:
    description: Endpoint para crear usuario.
    handler: lambdas/usuarios/createUser/handler.generico
    events:
      - http:
          path: /api/${self:custom.v_create_user}/utils/usuario/create-user
          method: POST
          private: true
          authorizer:
            name: authorizerToken
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

  getUser:
    description: Endpoint para obtener usuario.
    handler: lambdas/usuarios/getUser/handler.generico
    events:
      - http:
          path: /api/${self:custom.v_get_user}/utils/usuario/get-user/
          method: GET
          private: true
          authorizer:
            name: authorizerToken
            identitySource: method.request.header.token
          caching: # DESHABILITAR TIEMPO DE SEGURIDAD CACHÉ
            enabled: false
          cors:
            origin:
              - "*"
            headers:
              - Content-Type
              - token
              - X-Api-Key

resources:
  Resources:

    # UserTable:
    #   Type: AWS::DynamoDB::Table
    #   Properties:
    #     TableName: ${file(./config/config.${self:provider.stage}.json):DATA_BASE_CREATION.AWS.DYNAMODB.TABLES.USUARIO}
    #     AttributeDefinitions:
    #       - AttributeName: email
    #         AttributeType: S
    #     KeySchema:
    #       - AttributeName: email
    #         KeyType: HASH
    #     ProvisionedThroughput:
    #       ReadCapacityUnits: 5
    #       WriteCapacityUnits: 5
    #     BillingMode: PAY_PER_REQUEST

    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(./config/config.${self:provider.stage}.json):DATA_BASE_CREATION.AWS.DYNAMODB.TABLES.USUARIO}
        AttributeDefinitions:
          - AttributeName: email
            AttributeType: S
          - AttributeName: business
            AttributeType: N
          - AttributeName: country
            AttributeType: N
          - AttributeName: clave
            AttributeType: S
          - AttributeName: deletedAt
            AttributeType: S
        KeySchema:
          - AttributeName: email
            KeyType: HASH
          - AttributeName: business
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        LocalSecondaryIndexes:
          - IndexName: "LSI_Utils"
            KeySchema:
            - AttributeName: "email"
              KeyType: "HASH"
            - AttributeName: "country"
              KeyType: "RANGE"
            Projection:
              NonKeyAttributes: []
              ProjectionType: "ALL"
          - IndexName: "LSI_Clave"
            KeySchema:
            - AttributeName: "email"
              KeyType: "HASH"
            - AttributeName: "clave"
              KeyType: "RANGE"
            Projection:
              NonKeyAttributes: []
              ProjectionType: "ALL"
          - IndexName: "LSI_DeleteAt"
            KeySchema:
            - AttributeName: "email"
              KeyType: "HASH"
            - AttributeName: "deletedAt"
              KeyType: "RANGE"
            Projection:
              NonKeyAttributes: []
              ProjectionType: "ALL"
        BillingMode: PAY_PER_REQUEST